{"ast":null,"code":"var _jsxFileName = \"/Users/shepelev.official/some-spa/src/Pages/CallBoard/CallBoard.js\";\nimport React, { Component } from 'react';\nimport PageMenu from \"../../components/pageMenu/pageMenu\";\nimport classes from \"./CallBoard.css\";\nimport BoardCard from \"../../components/boardCard/BoardCard\";\nimport addBoardCard from \"../../components/boardCard/addBboardCard\";\nimport img from \"../../promocode4.jpg\";\n\nclass CallBoard extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      createBoardCard: false,\n      boardCard: [{\n        image: `${img}`,\n        note: ' Этот подход хорош, потому что все ресурсы обрабатываются системой сборки и получат имена файлов с хэшами в производственной сборке. Вы также получите сообщение об ошибке, если файл был перемещен или удален. Недостатком является то, что это может быть громоздким, если у вас есть сотни изображений, потому что вы не можете иметь произвольные пути импорта.',\n        persone: 'ME'\n      }, {\n        image: 'Image',\n        note: 'Lorem ipsum parabelum',\n        persone: 'ME'\n      }]\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.callBoard,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(PageMenu, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }\n    }, \"\\u0414\\u043E\\u0441\\u043A\\u0430 \\u043E\\u0431\\u044C\\u044F\\u0432\\u043B\\u0435\\u043D\\u0438\\u0439\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.boardHolder,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }\n    }, this.state.boardCard.map((card, index) => {\n      return /*#__PURE__*/React.createElement(BoardCard, {\n        key: index,\n        image: card.image,\n        note: card.note,\n        persone: card.persone,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 29\n        }\n      });\n    })));\n  }\n\n}\n\nexport default CallBoard;","map":{"version":3,"sources":["/Users/shepelev.official/some-spa/src/Pages/CallBoard/CallBoard.js"],"names":["React","Component","PageMenu","classes","BoardCard","addBoardCard","img","CallBoard","state","createBoardCard","boardCard","image","note","persone","render","callBoard","boardHolder","map","card","index"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,QAAP,MAAqB,oCAArB;AACA,OAAOC,OAAP,MAAoB,iBAApB;AACA,OAAOC,SAAP,MAAsB,sCAAtB;AACA,OAAOC,YAAP,MAAyB,0CAAzB;AAGA,OAAOC,GAAP,MAAgB,sBAAhB;;AAEA,MAAMC,SAAN,SAAwBN,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAE9BO,KAF8B,GAEtB;AACJC,MAAAA,eAAe,EAAE,KADb;AAEJC,MAAAA,SAAS,EAAE,CACP;AAACC,QAAAA,KAAK,EAAG,GAAEL,GAAI,EAAf;AAAkBM,QAAAA,IAAI,EAAE,qWAAxB;AAA+XC,QAAAA,OAAO,EAAE;AAAxY,OADO,EAEP;AAACF,QAAAA,KAAK,EAAE,OAAR;AAAiBC,QAAAA,IAAI,EAAE,uBAAvB;AAAgDC,QAAAA,OAAO,EAAE;AAAzD,OAFO;AAFP,KAFsB;AAAA;;AAU9BC,EAAAA,MAAM,GAAG;AAGL,wBACI;AAAK,MAAA,SAAS,EAAEX,OAAO,CAACY,SAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qGAFJ,eAGI;AAAK,MAAA,SAAS,EAAEZ,OAAO,CAACa,WAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAMK,KAAKR,KAAL,CAAWE,SAAX,CAAqBO,GAArB,CAAyB,CAACC,IAAD,EAAOC,KAAP,KAAiB;AACvC,0BACI,oBAAC,SAAD;AACI,QAAA,GAAG,EAAEA,KADT;AAEI,QAAA,KAAK,EAAED,IAAI,CAACP,KAFhB;AAGI,QAAA,IAAI,EAAEO,IAAI,CAACN,IAHf;AAII,QAAA,OAAO,EAAEM,IAAI,CAACL,OAJlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ;AAQH,KATA,CANL,CAHJ,CADJ;AAuBH;;AApC6B;;AAuClC,eAAeN,SAAf","sourcesContent":["import React, {Component} from 'react';\nimport PageMenu from \"../../components/pageMenu/pageMenu\";\nimport classes from \"./CallBoard.css\";\nimport BoardCard from \"../../components/boardCard/BoardCard\";\nimport addBoardCard from \"../../components/boardCard/addBboardCard\";\n\n\nimport img from \"../../promocode4.jpg\"\n\nclass CallBoard extends Component {\n\n    state = {\n        createBoardCard: false,\n        boardCard: [\n            {image: `${img}`, note: ' Этот подход хорош, потому что все ресурсы обрабатываются системой сборки и получат имена файлов с хэшами в производственной сборке. Вы также получите сообщение об ошибке, если файл был перемещен или удален. Недостатком является то, что это может быть громоздким, если у вас есть сотни изображений, потому что вы не можете иметь произвольные пути импорта.', persone: 'ME'},\n            {image: 'Image', note: 'Lorem ipsum parabelum', persone: 'ME'}\n        ]\n    }\n\n    render() {\n\n\n        return (\n            <div className={classes.callBoard}>\n                <PageMenu/>\n                <h1>Доска обьявлений</h1>\n                <div className={classes.boardHolder}>\n                    {/*{ if (this.state.createBoardCard === false) {*/}\n                    {/*    button*/}\n                    {/*}}*/}\n\n\n                    {this.state.boardCard.map((card, index) => {\n                        return (\n                            <BoardCard\n                                key={index}\n                                image={card.image}\n                                note={card.note}\n                                persone={card.persone}\n                            />\n                        )\n                    })}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default CallBoard;"]},"metadata":{},"sourceType":"module"}